#include <stdio.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <stdlib.h>
#include "shell.h"

/**
 * pathfinder - function finds the path and uses it to exeute program
 * @env: pointer
 *
 * Return: Always 0.
 */
/*char *pathfinder(char **env, char *str)*/

int main(int ac, char **av, char **env)
{
	int i, strcheck;
	unsigned int n = 0, index = 0;
	char *patharray;
	char *pathenv;
	char *pathpointer = *env;;
	char *pathstring;
	char *str = "PATH=";

/*get path*/
	for (i = 0; *pathpointer != NULL; *pathpointer++)
	{
		strcheck = _strncmp(*pathpointer, str, 5);
		printf("%s, %s, %d\n");

		if (strcheck == 0)
		{
			break;
		}
	}
/*pointer pointing to position 6 of Path string*/
	pathpointer = (*pathpointer + 5)

/*insert path in buffer*/
	*pathenv = malloc(sizeof(char str) * (strlen(*pathpointer) + 1));
	if (*pathenv == NULL)
	{
		return (-1);
	}
	while (*pathpointer != NULL)
	{
		pathenv[n] = pathpointer[n];
		n++;
	}
/* String tok, break string into small sections divided by ":"*/
	while (*pathenv != '\0' && *pathenv == ':')
	{
		*patharray = (malloc(sizeof(char *) * (strlen(pathenv) + 1);
		*patharray = strtok(*pathenv, ":");
		strncat( patharray[index], "/", 1);
				     index++;
	}


	return (0);
}
